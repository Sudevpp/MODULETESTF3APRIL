const apiUrl = 'https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=10&page=1&sparkline=false';

// Function to fetch data using .then
function fetchDataWithThen() {
    fetch(apiUrl)
    .then(response => response.json())
    .then(data => renderData(data))
    .catch(error => console.error('Error fetching data:', error));
}

// Function to fetch data using async/await
async function fetchDataWithAsyncAwait() {
    try {
        const response = await fetch(apiUrl);
        const data = await response.json();
        renderData(data);
    } catch (error) {
        console.error('Error fetching data:', error);
    }
}

// Function to render data in table
function renderData(data) {
    const tableBody = document.getElementById('cryptoData');
    tableBody.innerHTML = '';

    data.forEach(item => {
        const row = tableBody.insertRow();
        row.innerHTML = `
            <td>${item.name}</td>
            <td>${item.id}</td>
            <td><img src="${item.image}" alt="${item.name}" width="30"></td>
            <td>${item.symbol}</td>
            <td>${item.current_price}</td>
            <td>${item.total_volume}</td>
        `;
    });
}

// Function to handle search functionality
function search() {
    const input = document.getElementById('searchInput').value.toLowerCase();
    const rows = document.getElementById('cryptoData').rows;

    for (let i = 0; i < rows.length; i++) {
        const name = rows[i].cells[0].textContent.toLowerCase();
        if (name.includes(input)) {
            rows[i].style.display = '';
        } else {
            rows[i].style.display = 'none';
        }
    }
}

// Function to handle sorting
function sortBy(key) {
    const table = document.getElementById('cryptoData');
    const rows = Array.from(table.rows).slice(1);

    rows.sort((a, b) => {
        const valueA = parseFloat(a.cells[key === 'marketCap' ? 4 : 5].textContent.replace('$', '').replace(/,/g, ''));
        const valueB = parseFloat(b.cells[key === 'marketCap' ? 4 : 5].textContent.replace('$', '').replace(/,/g, ''));
        return valueA - valueB;
    });

    table.innerHTML = '';
    table.appendChild(table.rows[0]);

    rows.forEach(row => {
        table.appendChild(row);
    });
}
